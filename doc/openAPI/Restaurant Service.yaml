---
openapi: "3.0.3"
info:
  title: "Group4_TeamB API"
  description: "Group4_TeamB API"
  version: "1.0.0"
servers:
  - url: "https://Group4_TeamB"
paths:
  /api/v1/cuisine:
    get:
      summary: "GET api/v1/cuisine"
      operationId: "GetAll"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    post:
      summary: "POST api/v1/cuisine"
      operationId: "Create"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CuisineRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /api/v1/cuisine/{id}:
    put:
      summary: "PUT api/v1/cuisine/{id}"
      operationId: "Update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CuisineRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /api/v1/item/{id}:
    get:
      summary: "GET api/v1/item/{id}"
      operationId: "get"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    put:
      summary: "PUT api/v1/item/{id}"
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    post:
      summary: "POST api/v1/item/{id}"
      operationId: "create"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    delete:
      summary: "DELETE api/v1/item/{id}"
      operationId: "delete"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /api/v1/menu/{id}:
    get:
      summary: "GET api/v1/menu/{id}"
      operationId: "getAll"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    put:
      summary: "PUT api/v1/menu/{id}"
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    post:
      summary: "POST api/v1/menu/{id}"
      operationId: "create"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    delete:
      summary: "DELETE api/v1/menu/{id}"
      operationId: "delete"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /api/v1/auth/signin:
    post:
      summary: "POST api/v1/auth/signin"
      operationId: "signin"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SigninRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/JwtAuthenticationResponse"
  /api/v1/auth/signup:
    post:
      summary: "POST api/v1/auth/signup"
      operationId: "signup"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/JwtAuthenticationResponse"
  /api/v1/restaurant:
    get:
      summary: "GET api/v1/restaurant"
      operationId: "getAll"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    put:
      summary: "PUT api/v1/restaurant"
      operationId: "ChangeStatus"
      parameters:
        - name: "id"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
        - name: "status"
          in: "query"
          required: true
          schema:
            type: "boolean"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
  /api/v1/restaurant/{id}:
    get:
      summary: "GET api/v1/restaurant/{id}"
      operationId: "getByCuisine"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    put:
      summary: "PUT api/v1/restaurant/{id}"
      operationId: "update"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
    post:
      summary: "POST api/v1/restaurant/{id}"
      operationId: "Creat"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestaurantRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Object"
components:
  schemas:
    Object:
      type: "object"
      properties: {}
    CuisineRequest:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
    ItemRequest:
      type: "object"
      properties:
        name:
          type: "string"
        image:
          type: "string"
        price:
          type: "number"
          format: "double"
        description:
          type: "string"
    MenuRequest:
      type: "object"
      properties:
        name:
          type: "string"
        image:
          type: "string"
        description:
          type: "string"
    SigninRequest:
      type: "object"
      properties:
        email:
          type: "string"
        password:
          type: "string"
    JwtAuthenticationResponse:
      type: "object"
      properties:
        token:
          type: "string"
    SignUpRequest:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
    MultipartFile:
      type: "object"
      properties: {}
    RestaurantRequest:
      type: "object"
      properties:
        name:
          type: "string"
        location:
          type: "string"
        image:
          $ref: "#/components/schemas/MultipartFile"
        email:
          type: "string"
        phone:
          type: "string"
        mobile:
          type: "string"
        latitude:
          type: "string"
        longitude:
          type: "string"
        isOnline:
          type: "boolean"
        description:
          type: "string"
        openingAt:
          type: "string"
          format: "partial-time"
        closingAt:
          type: "string"
          format: "partial-time"
        sign:
          $ref: "#/components/schemas/SignUpRequest"
